#!/bin/sh

# Check for geth
test -x "$(command -v geth)" || {
  echo "Command not found: geth - install geth.";
  exit 1;
}

# Enter script directory
cd "$(dirname "$0")" || exit;

# Enter root directory
cd .. || exit;


unlockAccountsLib="lib/unlock-accounts";
genesisConfig=builds/genesis.json;

# Set Blockchain parameters
targetGasLimit="666666666666";
dbDir=builds/db;
etherbase=$(cat "$genesisConfig" | grep -Eo "\"coinbase\": \"0x[0-9a-fA-F]+\"" | cut -d " " -f2 | cut -d "\"" -f2);

startBlockchainNetworkNoUnlock () {
  # Start the blockchain network
  geth --datadir "$dbDir" --networkid "666" --http --miner.gastarget "$targetGasLimit" --http.corsdomain "localhost:8545" --mine --miner.etherbase "$etherbase" --miner.threads 1 --allow-insecure-unlock;
}

if [[ $# -gt 0 ]]
then
  while [[ ${1} != "" ]]
  do
    case ${1} in
      --unlock-coinbase | -c )
        # unlock coinbase account
        coinbase=${etherbase}
        ./"${unlockAccountsLib}" --comma-separated-start "${coinbase}";
      ;;
      --unlock-accounts | -a )
        # unlock any number of comma-separated accounts
        shift;
        accounts=${1}
        if [[ -n "${accounts}" ]]
        then
          ./"${unlockAccountsLib}" --comma-separated-start "${accounts}";
        else
          echo "Please supply the account to unlock." && exit 1;
        fi
      ;;
      --unlock-all | -A )
        # unlock all generated accounts
        ./"${unlockAccountsLib}" --all-start;
      ;;
      --no-unlock | -n )
        # Do not unlock any accounts
        startBlockchainNetworkNoUnlock;
      ;;
      * )
        # Invalid option
        echo ":::Invalid option: ${1}";
      ;;
    esac

    shift;
  done
fi
